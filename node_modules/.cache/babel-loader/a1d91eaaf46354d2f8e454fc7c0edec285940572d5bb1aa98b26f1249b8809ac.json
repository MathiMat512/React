{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mathias\\\\Downloads\\\\Pruebas-React\\\\pruebas-react\\\\src\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport logo from '../images/logo.png';\nimport './Login.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [usuario, setUsuario] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const [mensajeTipo, setMensajeTipo] = useState('');\n  const mostrarMensaje = (mensaje, tipo) => {\n    setMensaje(mensaje);\n    setMensajeTipo(tipo);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const usuarioTrimmed = usuario.trim();\n    if (!usuarioTrimmed) {\n      mostrarMensaje('Por favor, ingrese un usuario.', 'error');\n      return;\n    }\n    mostrarMensaje('Validando usuario...', 'info');\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuario: usuarioTrimmed\n        })\n      });\n      const data = await response.json();\n      console.log('Respuesta del servidor:', data);\n      if (!response.ok) {\n        throw new Error(data.mensaje || 'Error en la validación');\n      }\n      if (data.success) {\n        mostrarMensaje('¡Usuario válido! Redireccionando...', 'success');\n\n        // Guardar en sessionStorage\n        sessionStorage.setItem('usuarioData', JSON.stringify({\n          usuario: data.usuario\n        }));\n        console.log('Datos guardados en sessionStorage:', sessionStorage.getItem('usuarioData'));\n\n        // Redireccionar luego de 1 segundo\n        setTimeout(() => {\n          window.location.href = '/'; // Redirige a la página principal (puedes cambiarla)\n        }, 1000);\n      } else {\n        mostrarMensaje(data.mensaje || 'Error de autenticación', 'error');\n      }\n    } catch (error) {\n      console.error('Error en la petición:', error);\n      mostrarMensaje('Error en el servidor. Intente nuevamente.', 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"bodylogin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo de la empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"h2login\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-grouplogin\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labellogin\",\n            htmlFor: \"usuario\",\n            children: \"Usuario:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputlogin\",\n            type: \"text\",\n            id: \"usuario\",\n            value: usuario,\n            onChange: e => setUsuario(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonlogin\",\n          type: \"submit\",\n          id: \"submitBtn\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), mensaje && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mensaje\",\n        className: `mensaje ${mensajeTipo}`,\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"cEXX4dh9Cd+UD64LWvag9BGolWw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","Login","_s","usuario","setUsuario","mensaje","setMensaje","mensajeTipo","setMensajeTipo","mostrarMensaje","tipo","handleSubmit","event","preventDefault","usuarioTrimmed","trim","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","Error","success","sessionStorage","setItem","getItem","setTimeout","window","location","href","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","htmlFor","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Mathias/Downloads/Pruebas-React/pruebas-react/src/Login/Login.js"],"sourcesContent":["import logo from '../images/logo.png';\r\nimport './Login.css';\r\nimport React, { useState } from 'react';\r\n\r\nfunction Login() {\r\n    const [usuario, setUsuario] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n    const [mensajeTipo, setMensajeTipo] = useState('');\r\n  \r\n    const mostrarMensaje = (mensaje, tipo) => {\r\n      setMensaje(mensaje);\r\n      setMensajeTipo(tipo);\r\n    };\r\n  \r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n  \r\n      const usuarioTrimmed = usuario.trim();\r\n      if (!usuarioTrimmed) {\r\n        mostrarMensaje('Por favor, ingrese un usuario.', 'error');\r\n        return;\r\n      }\r\n  \r\n      mostrarMensaje('Validando usuario...', 'info');\r\n  \r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/auth/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ usuario: usuarioTrimmed })\r\n        });\r\n  \r\n        const data = await response.json();\r\n        console.log('Respuesta del servidor:', data);\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(data.mensaje || 'Error en la validación');\r\n        }\r\n  \r\n        if (data.success) {\r\n          mostrarMensaje('¡Usuario válido! Redireccionando...', 'success');\r\n  \r\n          // Guardar en sessionStorage\r\n          sessionStorage.setItem('usuarioData', JSON.stringify({ usuario: data.usuario }));\r\n          console.log('Datos guardados en sessionStorage:', sessionStorage.getItem('usuarioData'));\r\n  \r\n          // Redireccionar luego de 1 segundo\r\n          setTimeout(() => {\r\n            window.location.href = '/'; // Redirige a la página principal (puedes cambiarla)\r\n          }, 1000);\r\n        } else {\r\n          mostrarMensaje(data.mensaje || 'Error de autenticación', 'error');\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error('Error en la petición:', error);\r\n        mostrarMensaje('Error en el servidor. Intente nuevamente.', 'error');\r\n      }\r\n    };\r\n\r\n    return (\r\n        <body className='bodylogin'>\r\n            <div className=\"login-container\">\r\n            <img src={logo} alt=\"logo de la empresa\"/>\r\n            <h2 className='h2login'>Iniciar Sesión</h2>\r\n            <form id=\"loginForm\" onSubmit={handleSubmit}>\r\n                <div className=\"input-grouplogin\">\r\n                    <label className='labellogin' htmlFor=\"usuario\">Usuario:</label>\r\n                    <input\r\n                    className='inputlogin'\r\n                    type=\"text\"\r\n                    id=\"usuario\"\r\n                    value={usuario}\r\n                    onChange={(e) => setUsuario(e.target.value)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <button className='buttonlogin' type=\"submit\" id=\"submitBtn\">Entrar</button>\r\n            </form>\r\n                {mensaje && (\r\n            <div id=\"mensaje\" className={`mensaje ${mensajeTipo}`}>\r\n                {mensaje}\r\n            </div>\r\n            )}\r\n            </div>\r\n        </body>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}