{"ast":null,"code":"const API_URL='http://192.168.1.50:3001/api';async function callAPI(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const{method='GET',params={},body}=options;const url=new URL(`${API_URL}${endpoint}`);// Añadir parámetros a la URL si es GET\nif(method==='GET'&&Object.keys(params).length>0){Object.keys(params).forEach(key=>url.searchParams.append(key,params[key]));}const fetchOptions={method,headers:{'Content-Type':'application/json'}};// Añadir cuerpo si es POST\nif(method==='POST'&&body){fetchOptions.body=JSON.stringify(body);}const response=await fetch(url,fetchOptions);if(!response.ok){throw new Error(`Error en la petición: ${response.status}`);}return await response.json();}catch(error){console.error('Error al llamar a la API:',error);throw error;}}const API={buscar:params=>callAPI('/buscar',{method:'POST',body:params}),ctacte:params=>callAPI('/ctacte',{method:'POST',body:params}),deuda:params=>callAPI('/deuda',{method:'GET',params}),ctapagar:params=>callAPI('/ctapagar',{method:'POST',body:params}),pendiente:params=>callAPI('/pendiente',{method:'GET',params}),buscarAllCOAs:()=>callAPI('/allCOAs',{method:'GET'}),login:async usuario=>{try{const response=await fetch(`${API_URL}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({usuario})});if(!response.ok){throw new Error(`Error en la petición: ${response.status}`);}return await response.json();}catch(error){console.error('Error en login:',error);throw error;}}};window.API=API;","map":{"version":3,"names":["API_URL","callAPI","endpoint","options","arguments","length","undefined","method","params","body","url","URL","Object","keys","forEach","key","searchParams","append","fetchOptions","headers","JSON","stringify","response","fetch","ok","Error","status","json","error","console","API","buscar","ctacte","deuda","ctapagar","pendiente","buscarAllCOAs","login","usuario","window"],"sources":["C:/Users/Sistemas/Desktop/React/src/api-utils.js"],"sourcesContent":["const API_URL = 'http://192.168.1.50:3001/api';\r\n\r\nasync function callAPI(endpoint, options = {}) {\r\n  try {\r\n    const { method = 'GET', params = {}, body } = options;\r\n    const url = new URL(`${API_URL}${endpoint}`);\r\n\r\n    // Añadir parámetros a la URL si es GET\r\n    if (method === 'GET' && Object.keys(params).length > 0) {\r\n      Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n    }\r\n\r\n    const fetchOptions = {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // Añadir cuerpo si es POST\r\n    if (method === 'POST' && body) {\r\n      fetchOptions.body = JSON.stringify(body);\r\n    }\r\n\r\n    const response = await fetch(url, fetchOptions);\r\n    if (!response.ok) {\r\n      throw new Error(`Error en la petición: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error al llamar a la API:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nconst API = {\r\n  buscar: (params) => callAPI('/buscar', { method: 'POST', body: params }),\r\n  ctacte: (params) => callAPI('/ctacte', { method: 'POST', body: params }),\r\n  deuda: (params) => callAPI('/deuda', { method: 'GET', params }),\r\n  ctapagar: (params) => callAPI('/ctapagar', { method: 'POST', body: params }),\r\n  pendiente: (params) => callAPI('/pendiente', { method: 'GET', params }),\r\n  buscarAllCOAs: () => callAPI('/allCOAs', { method: 'GET' }),\r\n  login: async (usuario) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ usuario })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Error en la petición: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nwindow.API = API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}